{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nexport default function useStats(url) {\n  _s();\n\n  var _useState = useState(),\n      stats = _useState[0],\n      setStats = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  useEffect(function () {\n    console.log('Mounting or updating');\n\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log('fatching data');\n                _context.next = 3;\n                return fetch(url).then(function (res) {\n                  return res.json();\n                });\n\n              case 3:\n                data = _context.sent;\n                setStats(data);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    fetchData();\n  }, []);\n  return stats;\n}\n\n_s(useStats, \"puzSwqOOZN9CJDQU/wupGn9jSck=\");","map":{"version":3,"sources":["C:/Users/user/Documents/Projects/Web develop/React/covid19-tracker/utils/useStats.js"],"names":["useState","useEffect","useStats","url","stats","setStats","loading","setLoading","error","setError","console","log","fetchData","fetch","then","res","json","data"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AAAA;;AAAA,kBACRH,QAAQ,EADA;AAAA,MAC3BI,KAD2B;AAAA,MACpBC,QADoB;;AAAA,mBAEJL,QAAQ,CAAC,KAAD,CAFJ;AAAA,MAE3BM,OAF2B;AAAA,MAElBC,UAFkB;;AAAA,mBAGRP,QAAQ,CAAC,KAAD,CAHA;AAAA,MAG3BQ,KAH2B;AAAA,MAGpBC,QAHoB;;AAKlCR,EAAAA,SAAS,CAAC,YAAM;AACZS,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;;AADY,aAEGC,SAFH;AAAA;AAAA;;AAAA;AAAA,4EAEZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACIF,gBAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AADJ;AAAA,uBAEuBE,KAAK,CAACV,GAAD,CAAL,CAAWW,IAAX,CAAgB,UAAAC,GAAG;AAAA,yBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,iBAAnB,CAFvB;;AAAA;AAEUC,gBAAAA,IAFV;AAIIZ,gBAAAA,QAAQ,CAACY,IAAD,CAAR;;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFY;AAAA;AAAA;;AAQZL,IAAAA,SAAS;AACZ,GATQ,EASN,EATM,CAAT;AAUA,SAAOR,KAAP;AACH;;GAhBuBF,Q","sourcesContent":["import { useState, useEffect } from \"react\"\r\n\r\nexport default function useStats(url) {\r\n    const [stats, setStats] = useState()\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(false)\r\n\r\n    useEffect(() => {\r\n        console.log('Mounting or updating');\r\n        async function fetchData() {\r\n            console.log('fatching data');\r\n            const data = await fetch(url).then(res => res.json()\r\n            )\r\n            setStats(data)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n    return stats\r\n}"]},"metadata":{},"sourceType":"module"}